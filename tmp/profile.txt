1    .\client.jl:413; _start()
 1 .\REPL.jl:180; run_repl(::Base.REPL.LineEditREPL, ::Base.##512#513)
  1 .\REPL.jl:945; run_frontend(::Base.REPL.LineEditREPL, ::Base.REPL.REPLBackendRef)
   1 .\LineEdit.jl:1583; run_interface(::Base.Terminals.TTYTerminal, ::Base.LineEdit.ModalInterface)
    1 .\boot.jl:235; eval(::Module, ::Any)
     1 .\REPL.jl:646; (::Base.REPL.#do_respond#16{Bool,Atom.##148#149,Base.REPL.LineEditREPL,Base.LineEdit.Prompt})(::Base.LineEdit.MIState, ::Base.AbstractIOBuffer{Array{UInt8,1}}, ::Bool)
      1 .\REPL.jl:129; print_response(::Base.REPL.LineEditREPL, ::Any, ::Void, ::Bool, ::Bool)
       1 .\REPL.jl:144; print_response(::Base.Terminals.TTYTerminal, ::Any, ::Void, ::Bool, ::Bool, ::Void)
        1 .\boot.jl:235; eval(::Module, ::Any)
         1 .\multimedia.jl:218; display(::Tuple{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1}})
          1 C:\Users\Benoit Richard\.julia\v0.6\Media\src\compat.jl:9; display(::Media.DisplayHook, ::Tuple{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1}})
           1 C:\Users\Benoit Richard\.julia\v0.6\Media\src\compat.jl:27; render(::Media.NoDisplay, ::Tuple{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1}})
            1 C:\Users\Benoit Richard\.julia\v0.6\Media\src\compat.jl:14; hookless(::Media.##7#8{Tuple{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1}}})
             1 .\multimedia.jl:218; display(::Tuple{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1}})
              1 .\REPL.jl:125; display(::Base.REPL.REPLDisplay{Base.REPL.LineEditREPL}, ::Tuple{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},Array{Float64,1}})
2966 .\event.jl:73; (::Base.REPL.##1#2{Base.REPL.REPLBackend})()
 2966 .\REPL.jl:97; macro expansion
  2966 .\REPL.jl:66; eval_user_input(::Any, ::Base.REPL.REPLBackend)
   2966 .\boot.jl:235; eval(::Module, ::Any)
    2966 .\<missing>:?; anonymous
     2966 C:\Users\Benoit Richard\.julia\v0.6\Atom\src\repl.jl:118; macro expansion
      2966 .\boot.jl:234; eval(::Any)
       2966 .\boot.jl:235; eval(::Module, ::Any)
        2966 .\<missing>:?; anonymous
         2966 .\profile.jl:23; macro expansion
          143  C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:427; test(::Int64)
           143 C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:116; multi_network(::Int64, ::Array{Float64,1}, ::Array{#ERnetwork,1})
            13  C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:90; ERnetwork(::Int64, ::Float64)
             13 .\<missing>:0; (::StatsBase.#kw##sample)(::Array{Any,1}, ::StatsBase.#sample, ::MersenneTwister, ::UnitRange{Int64}, ::Int64)
              13 .\<missing>:0; (::StatsBase.#kw##sample!)(::Array{Any,1}, ::StatsBase.#sample!, ::MersenneTwister, ::UnitRange{Int64}, ::Array{Int64,1})
               13 C:\Users\Benoit Richard\.julia\v0.6\StatsBase\src\sampling.jl:329; #sample!#122(::Bool, ::Bool, ::Function, ::MersenneTwister, ::UnitRange{Int64}, ::Array{Int64,1})
                13 C:\Users\Benoit Richard\.julia\v0.6\StatsBase\src\sampling.jl:17; direct_sample!(::MersenneTwister, ::UnitRange{Int64}, ::Array{Int64,1})
                 1 .\random.jl:0; rand(::MersenneTwister, ::Base.Random.RangeGeneratorInt{Int64,UInt64})
                 1 .\random.jl:620; rand(::MersenneTwister, ::Base.Random.RangeGeneratorInt{Int64,UInt64})
                  1 .\random.jl:344; rand
                   1 .\random.jl:146; rand_ui52_raw
                    1 .\random.jl:145; rand_ui52_raw_inbounds
                     1 .\random.jl:138; rand_inbounds
                      1 .\random.jl:125; mt_pop!
                 1 .\random.jl:622; rand(::MersenneTwister, ::Base.Random.RangeGeneratorInt{Int64,UInt64})
                  1 .\random.jl:344; rand
                   1 .\random.jl:146; rand_ui52_raw
                    1 .\random.jl:132; reserve_1
                 9 .\random.jl:630; rand(::MersenneTwister, ::Base.Random.RangeGeneratorInt{Int64,UInt64})
                  8 .\random.jl:541; rem_knuth
            5   C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:91; ERnetwork(::Int64, ::Float64)
             5 .\<missing>:0; (::StatsBase.#kw##sample)(::Array{Any,1}, ::StatsBase.#sample, ::MersenneTwister, ::UnitRange{Int64}, ::Int64)
              5 .\<missing>:0; (::StatsBase.#kw##sample!)(::Array{Any,1}, ::StatsBase.#sample!, ::MersenneTwister, ::UnitRange{Int64}, ::Array{Int64,1})
               5 C:\Users\Benoit Richard\.julia\v0.6\StatsBase\src\sampling.jl:329; #sample!#122(::Bool, ::Bool, ::Function, ::MersenneTwister, ::UnitRange{Int64}, ::Array{Int64,1})
                5 C:\Users\Benoit Richard\.julia\v0.6\StatsBase\src\sampling.jl:17; direct_sample!(::MersenneTwister, ::UnitRange{Int64}, ::Array{Int64,1})
                 1 .\random.jl:619; rand(::MersenneTwister, ::Base.Random.RangeGeneratorInt{Int64,UInt64})
                 2 .\random.jl:620; rand(::MersenneTwister, ::Base.Random.RangeGeneratorInt{Int64,UInt64})
                  2 .\random.jl:344; rand
                   2 .\random.jl:146; rand_ui52_raw
                    1 .\random.jl:145; rand_ui52_raw_inbounds
                     1 .\random.jl:138; rand_inbounds
                      1 .\random.jl:125; mt_pop!
                    1 .\random.jl:132; reserve_1
                     1 .\random.jl:129; gen_rand
                      1 .\random.jl:123; mt_setfull!
            125 C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:93; ERnetwork(::Int64, ::Float64)
             8  .\abstractarray.jl:883; getindex
              8 .\multidimensional.jl:491; _getindex
               8 .\multidimensional.jl:495; macro expansion
                8 .\multidimensional.jl:506; _unsafe_getindex(::IndexLinear, ::Array{Int64,2}, ::Base.LogicalIndex{Int64,BitArray{1}}, ::Base.Slice{Base.OneTo{Int64}})
                 8 .\multidimensional.jl:513; macro expansion
                  8 .\multidimensional.jl:519; _unsafe_getindex!
                   8 .\multidimensional.jl:525; macro expansion
                    6 .\cartesian.jl:62; macro expansion
                     4 .\multidimensional.jl:416; next
                     2 .\multidimensional.jl:418; next
                    2 .\cartesian.jl:64; macro expansion
                     2 .\multidimensional.jl:527; macro expansion
             9  .\array.jl:1156; hcat(::Array{Int64,1}, ::Array{Int64,1})
              9 .\array.jl:476; collect(::Base.Generator{Base.Iterators.Prod2{UnitRange{Int64},UnitRange{Int64}},Base.##61#62{Int64,Tuple{Array{Int64,1},Array{Int64,1}}}})
               4 .\array.jl:463; _array_for(::Type{Int64}, ::Base.Iterators.Prod2{UnitRange{Int64},UnitRange{Int64}}, ::Base.HasShape)
               1 .\array.jl:507; collect_to!(::Array{Int64,2}, ::Base.Generator{Base.Iterators.Prod2{UnitRange{Int64},UnitRange{Int64}},Base.##61#62{Int64,Tuple{Array{Int64,1},Array{Int64,1}}}}, ::Int64, ::Tuple{Int64,Int64,Nullable{Int64},Bool})
               3 .\array.jl:508; collect_to!(::Array{Int64,2}, ::Base.Generator{Base.Iterators.Prod2{UnitRange{Int64},UnitRange{Int64}},Base.##61#62{Int64,Tuple{Array{Int64,1},Array{Int64,1}}}}, ::Int64, ::Tuple{Int64,Int64,Nullable{Int64},Bool})
                1 .\<missing>:0; (::Base.##61#62{Int64,Tuple{Array{Int64,1},Array{Int64,1}}})(::Tuple{Int64,Int64})
                2 .\generator.jl:44; next
                 2 .\iterators.jl:647; next
                  1 .\iterators.jl:635; prod_next
                  1 .\iterators.jl:642; prod_next
               1 .\array.jl:511; collect_to!(::Array{Int64,2}, ::Base.Generator{Base.Iterators.Prod2{UnitRange{Int64},UnitRange{Int64}},Base.##61#62{Int64,Tuple{Array{Int64,1},Array{Int64,1}}}}, ::Int64, ::Tuple{Int64,Int64,Nullable{Int64},Bool})
             2  .\broadcast.jl:455; broadcast
              2 .\broadcast.jl:316; broadcast_c
               2 .\broadcast.jl:281; broadcast_t
                2 .\broadcast.jl:164; _broadcast!
                 2 .\broadcast.jl:176; macro expansion
                  1 .\simdloop.jl:71; macro expansion
                  1 .\simdloop.jl:73; macro expansion
                   1 .\broadcast.jl:180; macro expansion
             1  C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:154; edges_to_adjacency(::Array{Int64,2}, ::Int64)
              1 .\abstractarray.jl:883; getindex
               1 .\multidimensional.jl:491; _getindex
                1 .\multidimensional.jl:495; macro expansion
                 1 .\multidimensional.jl:506; _unsafe_getindex(::IndexLinear, ::Array{Int64,2}, ::Base.Slice{Base.OneTo{Int64}}, ::Int64)
                  1 .\multidimensional.jl:511; macro expansion
             64 C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:163; edges_to_adjacency(::Array{Int64,2}, ::Int64)
             27 C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:167; edges_to_adjacency(::Array{Int64,2}, ::Int64)
              27 .\array.jl:652; push!
             14 C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:168; edges_to_adjacency(::Array{Int64,2}, ::Int64)
              11 .\array.jl:652; push!
              1  .\array.jl:653; push!
          2823 C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:428; test(::Int64)
           732 C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:290; viable_components_size(::Array{Any,1})
            732 .\broadcast.jl:455; broadcast
             732 .\broadcast.jl:316; broadcast_c
              732 .\broadcast.jl:270; broadcast_t
               732 .\broadcast.jl:141; _broadcast!
                732 .\broadcast.jl:149; macro expansion
                 732 .\simdloop.jl:73; macro expansion
                  732 .\broadcast.jl:155; macro expansion
                   732 C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:274; find_gcc(::Array{Array{Int64,1},1})
                    731 C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:243; find_components(::Array{Array{Int64,1},1})
                     653 C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:180; connected_vertices(::Int64, ::Array{Array{Int64,1},1})
                      223 .\array.jl:228; fill!(::Array{Bool,1}, ::Bool)
                     15  C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:183; connected_vertices(::Int64, ::Array{Array{Int64,1},1})
                      12 .\array.jl:76; vect(::Int64, ::Vararg{Int64,N} where N)
                     5   C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:185; connected_vertices(::Int64, ::Array{Array{Int64,1},1})
                     3   C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:188; connected_vertices(::Int64, ::Array{Array{Int64,1},1})
                      2 .\array.jl:0; shift!(::Array{Int64,1})
                      1 .\array.jl:827; shift!(::Array{Int64,1})
                     7   C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:189; connected_vertices(::Int64, ::Array{Array{Int64,1},1})
                      6 .\array.jl:652; push!
                      1 .\array.jl:653; push!
                     44  C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:191; connected_vertices(::Int64, ::Array{Array{Int64,1},1})
                     1   C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:192; connected_vertices(::Int64, ::Array{Array{Int64,1},1})
                     3   C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:193; connected_vertices(::Int64, ::Array{Array{Int64,1},1})
                      3 .\array.jl:652; push!
                    1   C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:244; find_components(::Array{Array{Int64,1},1})
                     1 .\array.jl:652; push!
           642 C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:291; viable_components_size(::Array{Any,1})
            640 .\array.jl:1942; intersect(::Array{Int64,1}, ::Array{Int64,1})
             128 .\reduce.jl:573; any(::Base.##136#137{Int64}, ::Array{Int64,1})
             512 .\reduce.jl:574; any(::Base.##136#137{Int64}, ::Array{Int64,1})
            2   .\array.jl:1947; intersect(::Array{Int64,1}, ::Array{Int64,1})
             2 .\array.jl:652; push!
           1   C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:292; viable_components_size(::Array{Any,1})
           2   C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:296; viable_components_size(::Array{Any,1})
            2 .\strings\io.jl:40; print(::Base.TTY, ::String, ::Char, ::Vararg{Char,N} where N)
             2 .\strings\io.jl:122; print(::Base.TTY, ::String)
              2 .\stream.jl:832; unsafe_write(::Base.TTY, ::Ptr{UInt8}, ::UInt64)
               2 .\stream.jl:798; uv_write(::Base.TTY, ::Ptr{UInt8}, ::UInt64)
           236 C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:303; viable_components_size(::Array{Any,1})
            236 .\array.jl:1913; filter!(::##65#67{Array{Int64,1}}, ::Array{Int64,1})
             236 C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:303; #65
              236 .\reduce.jl:634; ∉
               1   .\reduce.jl:0; any(::Base.##136#137{Int64}, ::Array{Int64,1})
               63  .\reduce.jl:573; any(::Base.##136#137{Int64}, ::Array{Int64,1})
               172 .\reduce.jl:574; any(::Base.##136#137{Int64}, ::Array{Int64,1})
           995 C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:307; viable_components_size(::Array{Any,1})
            1   C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:254; find_components(::Array{Array{Int64,1},1}, ::Array{Int64,1}, ::Int64)
            1   C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:259; find_components(::Array{Array{Int64,1},1}, ::Array{Int64,1}, ::Int64)
             1 C:\Users\Benoit Richard\.julia\v0.6\DataStructures\src\queue.jl:12; Type
              1 C:\Users\Benoit Richard\.julia\v0.6\DataStructures\src\deque.jl:73; Type
               1 C:\Users\Benoit Richard\.julia\v0.6\DataStructures\src\deque.jl:69; Type
                1 C:\Users\Benoit Richard\.julia\v0.6\DataStructures\src\deque.jl:26; rear_deque_block
                 1 C:\Users\Benoit Richard\.julia\v0.6\DataStructures\src\deque.jl:17; Type
            2   C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:262; find_components(::Array{Array{Int64,1},1}, ::Array{Int64,1}, ::Int64)
            986 C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:263; find_components(::Array{Array{Int64,1},1}, ::Array{Int64,1}, ::Int64)
             45  C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:203; connected_vertices(::Int64, ::Array{Array{Int64,1},1}, ::Array{Int64,1}, ::Int64)
              6  .\bitarray.jl:0; BitArray{1}(::Int64)
              12 .\bitarray.jl:20; BitArray{1}(::Int64)
              22 .\bitarray.jl:22; BitArray{1}(::Int64)
              4  .\bitarray.jl:352; fill!(::BitArray{1}, ::Bool)
               4 .\array.jl:228; fill!(::Array{UInt64,1}, ::Int64)
             648 C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:204; connected_vertices(::Int64, ::Array{Array{Int64,1},1}, ::Array{Int64,1}, ::Int64)
              648 .\abstractarray.jl:968; setindex!
               648 .\multidimensional.jl:537; _setindex!
                648 .\multidimensional.jl:541; macro expansion
                 2   .\multidimensional.jl:0; _unsafe_setindex!(::IndexLinear, ::BitArray{1}, ::Bool, ::Array{Int64,1})
                 646 .\multidimensional.jl:549; _unsafe_setindex!(::IndexLinear, ::BitArray{1}, ::Bool, ::Array{Int64,1})
                  646 .\multidimensional.jl:556; macro expansion
                   2   .\bitarray.jl:675; macro expansion
                   89  .\cartesian.jl:62; macro expansion
                   555 .\cartesian.jl:64; macro expansion
                    555 .\multidimensional.jl:558; macro expansion
                     555 .\bitarray.jl:682; setindex!
                      87  .\bitarray.jl:672; unsafe_bitsetindex!
                       26 .\bitarray.jl:97; get_chunks_id
                      73  .\bitarray.jl:673; unsafe_bitsetindex!
                      36  .\bitarray.jl:675; unsafe_bitsetindex!
                      358 .\bitarray.jl:676; unsafe_bitsetindex!
             51  C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:205; connected_vertices(::Int64, ::Array{Array{Int64,1},1}, ::Array{Int64,1}, ::Int64)
              8  .\bitarray.jl:0; BitArray{1}(::Int64)
              21 .\bitarray.jl:20; BitArray{1}(::Int64)
              10 .\bitarray.jl:22; BitArray{1}(::Int64)
              7  .\bitarray.jl:352; fill!(::BitArray{1}, ::Bool)
               1 .\array.jl:226; fill!(::Array{UInt64,1}, ::Int64)
               6 .\array.jl:228; fill!(::Array{UInt64,1}, ::Int64)
             2   C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:206; connected_vertices(::Int64, ::Array{Array{Int64,1},1}, ::Array{Int64,1}, ::Int64)
              2 .\bitarray.jl:682; setindex!
               1 .\bitarray.jl:676; unsafe_bitsetindex!
             2   C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:208; connected_vertices(::Int64, ::Array{Array{Int64,1},1}, ::Array{Int64,1}, ::Int64)
              2 .\array.jl:207; getindex
             4   C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:209; connected_vertices(::Int64, ::Array{Array{Int64,1},1}, ::Array{Int64,1}, ::Int64)
             2   C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:211; connected_vertices(::Int64, ::Array{Array{Int64,1},1}, ::Array{Int64,1}, ::Int64)
             8   C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:212; connected_vertices(::Int64, ::Array{Array{Int64,1},1}, ::Array{Int64,1}, ::Int64)
              4 .\array.jl:0; shift!(::Array{Int64,1})
              2 .\array.jl:827; shift!(::Array{Int64,1})
              1 .\array.jl:828; shift!(::Array{Int64,1})
             1   C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:213; connected_vertices(::Int64, ::Array{Array{Int64,1},1}, ::Array{Int64,1}, ::Int64)
              1 .\bitarray.jl:665; getindex
               1 .\abstractarray.jl:362; checkbounds
                1 .\abstractarray.jl:347; checkbounds
                 1 .\abstractarray.jl:99; linearindices
                  1 .\abstractarray.jl:71; indices1
                   1 .\abstractarray.jl:64; indices
             11  C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:214; connected_vertices(::Int64, ::Array{Array{Int64,1},1}, ::Array{Int64,1}, ::Int64)
              10 .\array.jl:652; push!
              1  .\array.jl:653; push!
             184 C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:215; connected_vertices(::Int64, ::Array{Array{Int64,1},1}, ::Array{Int64,1}, ::Int64)
             9   C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:216; connected_vertices(::Int64, ::Array{Array{Int64,1},1}, ::Array{Int64,1}, ::Int64)
              2 .\bitarray.jl:665; getindex
               1 .\abstractarray.jl:362; checkbounds
              4 .\bitarray.jl:666; getindex
               2 .\bitarray.jl:660; unsafe_bitgetindex
             17  C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:217; connected_vertices(::Int64, ::Array{Array{Int64,1},1}, ::Array{Int64,1}, ::Int64)
              10 .\array.jl:652; push!
              7  .\array.jl:653; push!
               2 .\abstractarray.jl:134; endof
                2 .\abstractarray.jl:99; linearindices
                 2 .\abstractarray.jl:71; indices1
                  2 .\abstractarray.jl:64; indices
             2   C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:218; connected_vertices(::Int64, ::Array{Array{Int64,1},1}, ::Array{Int64,1}, ::Int64)
              1 .\bitarray.jl:681; setindex!
               1 .\abstractarray.jl:362; checkbounds
              1 .\bitarray.jl:682; setindex!
            3   C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:264; find_components(::Array{Array{Int64,1},1}, ::Array{Int64,1}, ::Int64)
             3 .\array.jl:652; push!
            1   C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:265; find_components(::Array{Array{Int64,1},1}, ::Array{Int64,1}, ::Int64)
            1   C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:266; find_components(::Array{Array{Int64,1},1}, ::Array{Int64,1}, ::Int64)
           2   C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:309; viable_components_size(::Array{Any,1})
           14  C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:310; viable_components_size(::Array{Any,1})
            8 .\array.jl:0; push!(::Array{Int64,1}, ::Int64, ::Int64, ::Int64)
            1 .\array.jl:652; push!(::Array{Int64,1}, ::Int64)
            2 .\array.jl:672; push!(::Array{Int64,1}, ::Int64, ::Int64, ::Int64, ::Int64, ::Vararg{Int64,N} where N)
           2   C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:317; viable_components_size(::Array{Any,1})
            2 .\strings\io.jl:40; print(::Base.TTY, ::String, ::Char, ::Vararg{Char,N} where N)
             2 .\char.jl:45; print(::Base.TTY, ::Char)
              2 .\io.jl:332; write(::Base.TTY, ::Char)
               2 .\stream.jl:873; write(::Base.TTY, ::UInt8)
                2 .\io.jl:293; unsafe_write(::Base.TTY, ::Base.RefValue{UInt8}, ::Int64)
                 2 .\stream.jl:832; unsafe_write(::Base.TTY, ::Ptr{UInt8}, ::UInt64)
                  2 .\stream.jl:798; uv_write(::Base.TTY, ::Ptr{UInt8}, ::UInt64)
           2   C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:320; viable_components_size(::Array{Any,1})
            1 .\bitarray.jl:0; getindex(::BitArray{1}, ::Int64)
           17  C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:328; viable_components_size(::Array{Any,1})
            1  C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:212; connected_vertices(::Int64, ::Array{Array{Int64,1},1}, ::Array{Int64,1}, ::Int64)
             1 .\array.jl:0; shift!(::Array{Int64,1})
            2  C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:214; connected_vertices(::Int64, ::Array{Array{Int64,1},1}, ::Array{Int64,1}, ::Int64)
             2 .\array.jl:652; push!
            13 C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:215; connected_vertices(::Int64, ::Array{Array{Int64,1},1}, ::Array{Int64,1}, ::Int64)
            1  C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:217; connected_vertices(::Int64, ::Array{Array{Int64,1},1}, ::Array{Int64,1}, ::Int64)
             1 .\array.jl:652; push!
           4   C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:331; viable_components_size(::Array{Any,1})
            1 .\bool.jl:0; !(::Bool)
           169 C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:334; viable_components_size(::Array{Any,1})
            169 .\array.jl:1913; filter!(::##66#68, ::Array{Int64,1})
             166 .\reduce.jl:631; in(::Int64, ::Array{Int64,1})
              44  .\reduce.jl:573; any(::Base.##136#137{Int64}, ::Array{Int64,1})
              122 .\reduce.jl:574; any(::Base.##136#137{Int64}, ::Array{Int64,1})
             1   C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:334; #66
           1   C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:339; viable_components_size(::Array{Any,1})
            1 .\strings\io.jl:40; print(::Base.TTY, ::String, ::Char, ::Vararg{Char,N} where N)
             1 .\strings\io.jl:122; print(::Base.TTY, ::String)
              1 .\stream.jl:832; unsafe_write(::Base.TTY, ::Ptr{UInt8}, ::UInt64)
               1 .\stream.jl:819; uv_write(::Base.TTY, ::Ptr{UInt8}, ::UInt64)
           2   C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:341; viable_components_size(::Array{Any,1})
            2 .\strings\io.jl:40; print(::Base.TTY, ::String, ::Char, ::Vararg{Char,N} where N)
             1 .\char.jl:45; print(::Base.TTY, ::Char)
              1 .\io.jl:332; write(::Base.TTY, ::Char)
               1 .\stream.jl:873; write(::Base.TTY, ::UInt8)
                1 .\io.jl:293; unsafe_write(::Base.TTY, ::Base.RefValue{UInt8}, ::Int64)
                 1 .\stream.jl:832; unsafe_write(::Base.TTY, ::Ptr{UInt8}, ::UInt64)
                  1 .\stream.jl:798; uv_write(::Base.TTY, ::Ptr{UInt8}, ::UInt64)
             1 .\strings\io.jl:122; print(::Base.TTY, ::String)
              1 .\stream.jl:832; unsafe_write(::Base.TTY, ::Ptr{UInt8}, ::UInt64)
               1 .\stream.jl:798; uv_write(::Base.TTY, ::Ptr{UInt8}, ::UInt64)
           2   C:\Users\Benoit Richard\Dropbox\Benoit‘s Master Thesis\main.jl:343; viable_components_size(::Array{Any,1})
            2 .\strings\io.jl:40; print(::Base.TTY, ::String, ::Char, ::Vararg{Char,N} where N)
             1 .\char.jl:45; print(::Base.TTY, ::Char)
              1 .\io.jl:332; write(::Base.TTY, ::Char)
               1 .\stream.jl:873; write(::Base.TTY, ::UInt8)
                1 .\io.jl:293; unsafe_write(::Base.TTY, ::Base.RefValue{UInt8}, ::Int64)
                 1 .\stream.jl:832; unsafe_write(::Base.TTY, ::Ptr{UInt8}, ::UInt64)
                  1 .\stream.jl:798; uv_write(::Base.TTY, ::Ptr{UInt8}, ::UInt64)
             1 .\strings\io.jl:122; print(::Base.TTY, ::String)
              1 .\stream.jl:832; unsafe_write(::Base.TTY, ::Ptr{UInt8}, ::UInt64)
               1 .\stream.jl:798; uv_write(::Base.TTY, ::Ptr{UInt8}, ::UInt64)
